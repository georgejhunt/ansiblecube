---
- name: Install conntrack
  apt: name={{item}} state=latest
  with_items:
    - conntrack
    - uwsgi-plugin-python
  tags: ['custom', 'update']

- name: Create /var/www/captiveportal folder
  file:
    path: /var/www/captiveportal
    owner: ideascube
    group: ideascube
    mode: 0755
    state: directory
  tags: ['custom', 'update']
  
- name: Copy captive portal script to /var/www/captiveportal
  template:
    src: cap.py.j2
    dest: /var/www/captiveportal/cap.py
    owner: ideascube
    group: ideascube
    mode: 0755
  notify: restart uwsgi
  tags: ['custom', 'update']

- name: Add nginx specific configuration file
  copy:
    src: nginx-captiveportal
    dest: /etc/nginx/sites-available/captiveportal
    owner: root
    group: root
    mode: 0644
  tags: ['custom', 'update']

- name: Enable captive portal vhost
  file: src=/etc/nginx/sites-available/captiveportal dest=/etc/nginx/sites-enabled/captiveportal state=link
  notify: restart nginx
  tags: ['custom', 'update']

- name: Create /etc/nginx/ssl folder
  file:
    path: /etc/nginx/ssl
    owner: root
    group: root
    mode: 0644
    state: directory
  tags: ['custom', 'update']

- name: Copy captive portal public key
  copy: 
    src: ideascube.crt
    dest: /etc/nginx/ssl/ideascube.crt
    owner: root
    group: root
    mode: 0644
  notify: restart nginx
  tags: ['custom', 'update']

- name: Copy captive portal private key
  copy:
    src: ideascube.key
    dest: /etc/nginx/ssl/ideascube.key
    owner: root
    group: root
    mode: 0640
  notify: restart nginx
  tags: ['custom', 'update']

- name: Add UWSGI specific configuration file
  copy:
    src: captive.ini
    dest: /etc/uwsgi/apps-available/captive.ini
    owner: root
    group: root
    mode: 0644
  tags: ['custom', 'update']

- name: Enable captive.ini for UWSGI
  file: src=/etc/uwsgi/apps-available/captive.ini dest=/etc/uwsgi/apps-enabled/captive.ini state=link
  notify: restart uwsgi
  tags: ['custom', 'update']

- name: Copy clear_iptables.sh to /usr/bin/local
  copy:
    src: clear_iptables.sh
    dest: /usr/local/bin/clean_iptables.sh
    owner: root
    group: root
    mode: 0755
  tags: ['custom', 'update']

- name: Add a cron entry to clean iptables rules
  cron:
    name: "Clear dead connections from CAPTIVE_PASSLIST"
    minute: "*/5"
    job: "/usr/local/bin/clean_iptables.sh"
    state: present
  tags: ['custom', 'update']

- name: Create iptables empty chains
  command: |
    /sbin/iptables -t nat -N CAPTIVE_HTTP
    /sbin/iptables -t nat -N CAPTIVE_HTTPS
    /sbin/iptables -t nat -N CAPTIVE_PASSLIST

- name: Send to CAPTIVE_HTTP if destination *:80/tcp
  iptables:
    table: nat
    chain: PREROUTING
    source: ! {{ hotspot_ip }}
    destination: ! {{ hotspot_ip }}
    destination_port: 80
    protocol: tcp
    match: tcp
    jump: CAPTIVE_HTTP

- name: Send to CAPTIVE_HTTPS if destination *:443/tcp
  iptables:
    table: nat
    chain: PREROUTING
    source: ! {{ hotspot_ip }}
    destination: ! {{ hotspot_ip }}
    destination_port: 443
    protocol: tcp
    match: tcp
    jump: CAPTIVE_HTTPS

- name: From CAPTIVE_HTTP, send to CAPTIVE_PASSLIST
  iptables:
    table: nat
    chain: CAPTIVE_HTTP
    protocol: tcp
    jump: CAPTIVE_PASSLIST

- name: From CAPTIVE_HTTPS, send to CAPTIVE_PASSLIST
  iptables:
    table: nat
    chain: CAPTIVE_HTTPS
    protocol: tcp
    jump: CAPTIVE_PASSLIST

- name: DNAT HTTP to hotspot_ip:82
  iptables:
    table: nat
    chain: CAPTIVE_HTTP
    protocol: tcp
    jump: DNAT
    to-destination: {{ hotspot_ip }}
    to-port: 82
    comment: Redirect HTTP traffic to server port 82

- name: DNAT HTTPS to hotspot_ip:83
  iptables:
    table: nat
    chain: CAPTIVE_HTTPS
    protocol: tcp
    jump: DNAT
    to-destination: {{ hotspot_ip }}
    to-port: 83
    comment: Redirect HTTPS traffic to server port 83

- name: Last CAPTIVE_PASSLIST rules RETURN to calling chain
  iptables:
    table: nat
    chain: CAPTIVE_PASSLIST
    protocol: tcp
    jump: RETURN

